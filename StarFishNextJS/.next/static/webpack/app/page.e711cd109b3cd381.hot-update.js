"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/WeatherForecast.tsx":
/*!********************************************!*\
  !*** ./src/components/WeatherForecast.tsx ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\nvar _s = $RefreshSig$();\n\n\nconst API_URL = \"https://api.open-meteo.com/v1/forecast\";\nconst WeatherForecast = ()=>{\n    _s();\n    const [forecastData, setForecastData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const fetchForecast = async ()=>{\n            try {\n                const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(API_URL, {\n                    params: {\n                        latitude: 52.52,\n                        longitude: 13.41,\n                        hourly: \"temperature_2m,cloud_cover\",\n                        forecast_days: 1\n                    }\n                });\n                console.log(\"API response:\", response.data); // Log response to inspect structure\n                setForecastData(response.data);\n            } catch (error) {\n                console.error(\"Error fetching forecast:\", error);\n            }\n        };\n        fetchForecast();\n    }, []);\n    return(/*\n    <div className=\"col-span-12 rounded-sm border border-stroke bg-white px-5 pb-5 pt-7.5 shadow-default dark:border-strokedark dark:bg-boxdark sm:px-7.5 xl:col-span-5\">\n      <div className=\"mb-3 justify-between gap-4 sm:flex\">\n        <div>\n          <h5 className=\"text-xl font-semibold text-black dark:text-white\">\n            Hourly Weather Forecast\n          </h5>\n        </div>\n      </div>\n\n      <div className=\"mb-2\">\n        {forecastData && forecastData.hourly ? (\n          <div id=\"chartForecast\" className=\"mx-auto flex justify-center\">\n            <ReactApexChart\n              type=\"line\"\n              height={350}\n              series={[\n                {\n                  name: \"Temperature\",\n                  data: forecastData.hourly.map((hour) => ({\n                    x: hour.time,\n                    y: hour.temperature_2m,\n                  })),\n                },\n              ]}\n              options={{\n                xaxis: {\n                  type: \"datetime\",\n                  labels: {\n                    datetimeFormatter: {\n                      year: \"yyyy\",\n                      month: \"MMM 'yy\",\n                      day: \"dd MMM\",\n                      hour: \"HH:mm\",\n                    },\n                  },\n                },\n                colors: [\"#3C50E0\"],\n                stroke: {\n                  curve: \"smooth\",\n                },\n                tooltip: {\n                  x: {\n                    format: \"dd MMM HH:mm\",\n                  },\n                },\n                grid: {\n                  borderColor: \"#f1f1f1\",\n                },\n              }}\n            />\n          </div>\n        ) : (\n          <p>Loading...</p>\n        )}\n      </div>\n\n      <div className=\"-mx-8 flex flex-wrap items-center justify-center gap-y-3\">\n        {forecastData && forecastData.hourly ? (\n          forecastData.hourly.map((hour, index) => (\n            <div key={index} className=\"w-full px-8 sm:w-1/2\">\n              <div className=\"flex w-full items-center\">\n                <span\n                  className={`mr-2 block h-3 w-full max-w-3 rounded-full bg-blue-500`}\n                ></span>\n                <p className=\"flex w-full justify-between text-sm font-medium text-black dark:text-white\">\n                  <span> {hour.time} </span>\n                  <span>\n                    {\" \"}\n                    {hour.temperature_2m}Â°C, {hour.cloud_cover}%{\" \"}\n                  </span>\n                </p>\n              </div>\n            </div>\n          ))\n        ) : (\n          <p>No hourly forecast data available.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n*/ Hello);\n};\n_s(WeatherForecast, \"GdGwGAc3aRVLQYYssTOULQ2pgt0=\");\n_c = WeatherForecast;\n/* harmony default export */ __webpack_exports__[\"default\"] = (WeatherForecast);\nvar _c;\n$RefreshReg$(_c, \"WeatherForecast\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL1dlYXRoZXJGb3JlY2FzdC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBbUQ7QUFDekI7QUFhMUIsTUFBTUksVUFBVTtBQUVoQixNQUFNQyxrQkFBNEI7O0lBQ2hDLE1BQU0sQ0FBQ0MsY0FBY0MsZ0JBQWdCLEdBQUdOLCtDQUFRQSxDQUFzQjtJQUV0RUMsZ0RBQVNBLENBQUM7UUFDUixNQUFNTSxnQkFBZ0I7WUFDcEIsSUFBSTtnQkFDRixNQUFNQyxXQUFXLE1BQU1OLDZDQUFLQSxDQUFDTyxHQUFHLENBQWVOLFNBQVM7b0JBQ3RETyxRQUFRO3dCQUNOQyxVQUFVO3dCQUNWQyxXQUFXO3dCQUNYQyxRQUFRO3dCQUNSQyxlQUFlO29CQUNqQjtnQkFDRjtnQkFDQUMsUUFBUUMsR0FBRyxDQUFDLGlCQUFpQlIsU0FBU1MsSUFBSSxHQUFHLG9DQUFvQztnQkFDakZYLGdCQUFnQkUsU0FBU1MsSUFBSTtZQUMvQixFQUFFLE9BQU9DLE9BQU87Z0JBQ2RILFFBQVFHLEtBQUssQ0FBQyw0QkFBNEJBO1lBQzVDO1FBQ0Y7UUFFQVg7SUFDRixHQUFHLEVBQUU7SUFFTCxPQUNFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBa0ZKLEdBQ0lZO0FBRUo7R0E5R01mO0tBQUFBO0FBZ0hOLCtEQUFlQSxlQUFlQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9jb21wb25lbnRzL1dlYXRoZXJGb3JlY2FzdC50c3g/NGVjZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IGF4aW9zIGZyb20gXCJheGlvc1wiO1xuaW1wb3J0IFJlYWN0QXBleENoYXJ0IGZyb20gXCJyZWFjdC1hcGV4Y2hhcnRzXCI7XG5cbmludGVyZmFjZSBIb3VybHlGb3JlY2FzdCB7XG4gIHRpbWU6IHN0cmluZztcbiAgdGVtcGVyYXR1cmVfMm06IG51bWJlcjtcbiAgY2xvdWRfY292ZXI6IG51bWJlcjtcbn1cblxuaW50ZXJmYWNlIEZvcmVjYXN0RGF0YSB7XG4gIGhvdXJseTogSG91cmx5Rm9yZWNhc3RbXTtcbn1cblxuY29uc3QgQVBJX1VSTCA9IFwiaHR0cHM6Ly9hcGkub3Blbi1tZXRlby5jb20vdjEvZm9yZWNhc3RcIjtcblxuY29uc3QgV2VhdGhlckZvcmVjYXN0OiBSZWFjdC5GQyA9ICgpID0+IHtcbiAgY29uc3QgW2ZvcmVjYXN0RGF0YSwgc2V0Rm9yZWNhc3REYXRhXSA9IHVzZVN0YXRlPEZvcmVjYXN0RGF0YSB8IG51bGw+KG51bGwpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgZmV0Y2hGb3JlY2FzdCA9IGFzeW5jICgpID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0PEZvcmVjYXN0RGF0YT4oQVBJX1VSTCwge1xuICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgbGF0aXR1ZGU6IDUyLjUyLFxuICAgICAgICAgICAgbG9uZ2l0dWRlOiAxMy40MSxcbiAgICAgICAgICAgIGhvdXJseTogXCJ0ZW1wZXJhdHVyZV8ybSxjbG91ZF9jb3ZlclwiLFxuICAgICAgICAgICAgZm9yZWNhc3RfZGF5czogMSxcbiAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgICAgY29uc29sZS5sb2coXCJBUEkgcmVzcG9uc2U6XCIsIHJlc3BvbnNlLmRhdGEpOyAvLyBMb2cgcmVzcG9uc2UgdG8gaW5zcGVjdCBzdHJ1Y3R1cmVcbiAgICAgICAgc2V0Rm9yZWNhc3REYXRhKHJlc3BvbnNlLmRhdGEpO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGZldGNoaW5nIGZvcmVjYXN0OlwiLCBlcnJvcik7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGZldGNoRm9yZWNhc3QoKTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiAoXG4gICAgLypcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbC1zcGFuLTEyIHJvdW5kZWQtc20gYm9yZGVyIGJvcmRlci1zdHJva2UgYmctd2hpdGUgcHgtNSBwYi01IHB0LTcuNSBzaGFkb3ctZGVmYXVsdCBkYXJrOmJvcmRlci1zdHJva2VkYXJrIGRhcms6YmctYm94ZGFyayBzbTpweC03LjUgeGw6Y29sLXNwYW4tNVwiPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYi0zIGp1c3RpZnktYmV0d2VlbiBnYXAtNCBzbTpmbGV4XCI+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPGg1IGNsYXNzTmFtZT1cInRleHQteGwgZm9udC1zZW1pYm9sZCB0ZXh0LWJsYWNrIGRhcms6dGV4dC13aGl0ZVwiPlxuICAgICAgICAgICAgSG91cmx5IFdlYXRoZXIgRm9yZWNhc3RcbiAgICAgICAgICA8L2g1PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1iLTJcIj5cbiAgICAgICAge2ZvcmVjYXN0RGF0YSAmJiBmb3JlY2FzdERhdGEuaG91cmx5ID8gKFxuICAgICAgICAgIDxkaXYgaWQ9XCJjaGFydEZvcmVjYXN0XCIgY2xhc3NOYW1lPVwibXgtYXV0byBmbGV4IGp1c3RpZnktY2VudGVyXCI+XG4gICAgICAgICAgICA8UmVhY3RBcGV4Q2hhcnRcbiAgICAgICAgICAgICAgdHlwZT1cImxpbmVcIlxuICAgICAgICAgICAgICBoZWlnaHQ9ezM1MH1cbiAgICAgICAgICAgICAgc2VyaWVzPXtbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgbmFtZTogXCJUZW1wZXJhdHVyZVwiLFxuICAgICAgICAgICAgICAgICAgZGF0YTogZm9yZWNhc3REYXRhLmhvdXJseS5tYXAoKGhvdXIpID0+ICh7XG4gICAgICAgICAgICAgICAgICAgIHg6IGhvdXIudGltZSxcbiAgICAgICAgICAgICAgICAgICAgeTogaG91ci50ZW1wZXJhdHVyZV8ybSxcbiAgICAgICAgICAgICAgICAgIH0pKSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBdfVxuICAgICAgICAgICAgICBvcHRpb25zPXt7XG4gICAgICAgICAgICAgICAgeGF4aXM6IHtcbiAgICAgICAgICAgICAgICAgIHR5cGU6IFwiZGF0ZXRpbWVcIixcbiAgICAgICAgICAgICAgICAgIGxhYmVsczoge1xuICAgICAgICAgICAgICAgICAgICBkYXRldGltZUZvcm1hdHRlcjoge1xuICAgICAgICAgICAgICAgICAgICAgIHllYXI6IFwieXl5eVwiLFxuICAgICAgICAgICAgICAgICAgICAgIG1vbnRoOiBcIk1NTSAneXlcIixcbiAgICAgICAgICAgICAgICAgICAgICBkYXk6IFwiZGQgTU1NXCIsXG4gICAgICAgICAgICAgICAgICAgICAgaG91cjogXCJISDptbVwiLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNvbG9yczogW1wiIzNDNTBFMFwiXSxcbiAgICAgICAgICAgICAgICBzdHJva2U6IHtcbiAgICAgICAgICAgICAgICAgIGN1cnZlOiBcInNtb290aFwiLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgdG9vbHRpcDoge1xuICAgICAgICAgICAgICAgICAgeDoge1xuICAgICAgICAgICAgICAgICAgICBmb3JtYXQ6IFwiZGQgTU1NIEhIOm1tXCIsXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ3JpZDoge1xuICAgICAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6IFwiI2YxZjFmMVwiLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApIDogKFxuICAgICAgICAgIDxwPkxvYWRpbmcuLi48L3A+XG4gICAgICAgICl9XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzc05hbWU9XCItbXgtOCBmbGV4IGZsZXgtd3JhcCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgZ2FwLXktM1wiPlxuICAgICAgICB7Zm9yZWNhc3REYXRhICYmIGZvcmVjYXN0RGF0YS5ob3VybHkgPyAoXG4gICAgICAgICAgZm9yZWNhc3REYXRhLmhvdXJseS5tYXAoKGhvdXIsIGluZGV4KSA9PiAoXG4gICAgICAgICAgICA8ZGl2IGtleT17aW5kZXh9IGNsYXNzTmFtZT1cInctZnVsbCBweC04IHNtOnctMS8yXCI+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCB3LWZ1bGwgaXRlbXMtY2VudGVyXCI+XG4gICAgICAgICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17YG1yLTIgYmxvY2sgaC0zIHctZnVsbCBtYXgtdy0zIHJvdW5kZWQtZnVsbCBiZy1ibHVlLTUwMGB9XG4gICAgICAgICAgICAgICAgPjwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJmbGV4IHctZnVsbCBqdXN0aWZ5LWJldHdlZW4gdGV4dC1zbSBmb250LW1lZGl1bSB0ZXh0LWJsYWNrIGRhcms6dGV4dC13aGl0ZVwiPlxuICAgICAgICAgICAgICAgICAgPHNwYW4+IHtob3VyLnRpbWV9IDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgIDxzcGFuPlxuICAgICAgICAgICAgICAgICAgICB7XCIgXCJ9XG4gICAgICAgICAgICAgICAgICAgIHtob3VyLnRlbXBlcmF0dXJlXzJtfcKwQywge2hvdXIuY2xvdWRfY292ZXJ9JXtcIiBcIn1cbiAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgKSlcbiAgICAgICAgKSA6IChcbiAgICAgICAgICA8cD5ObyBob3VybHkgZm9yZWNhc3QgZGF0YSBhdmFpbGFibGUuPC9wPlxuICAgICAgICApfVxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuKi9cbiAgICBIZWxsb1xuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgV2VhdGhlckZvcmVjYXN0O1xuIl0sIm5hbWVzIjpbIlJlYWN0IiwidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJheGlvcyIsIkFQSV9VUkwiLCJXZWF0aGVyRm9yZWNhc3QiLCJmb3JlY2FzdERhdGEiLCJzZXRGb3JlY2FzdERhdGEiLCJmZXRjaEZvcmVjYXN0IiwicmVzcG9uc2UiLCJnZXQiLCJwYXJhbXMiLCJsYXRpdHVkZSIsImxvbmdpdHVkZSIsImhvdXJseSIsImZvcmVjYXN0X2RheXMiLCJjb25zb2xlIiwibG9nIiwiZGF0YSIsImVycm9yIiwiSGVsbG8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/WeatherForecast.tsx\n"));

/***/ })

});